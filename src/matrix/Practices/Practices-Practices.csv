Practice,Definition,Synonyms/Similar Practices
"Adoption (standards, libs)",Implementing and adhering to specific standards and libraries.,"Standardization, Library Integration"
Tool Adoption,Implementing and utilizing specific tools in the development process.,Tool Integration
Applying Pressure,Exerting influence to ensure tasks are completed on time.,"Encouraging, Pushing Deadlines"
Approval / Sign Off,Getting formal approval from stakeholders for various project stages.,"Authorization, Validation"
Architecture Design,Designing the high-level structure of the software.,"System Design, Software Architecture"
Automation,Using automated tools for repetitive tasks.,"Auto-Execution, Automated Processes, Continuous Integration (CI), Continuous Delivery (CD)."
Change Management,Managing changes to the software in a systematic way.,"Change Control, Change Handling"
Code Reviews,Conducting systematic reviews of code changes by team members.,"Peer Reviews, Code Inspection"
Coding,Writing code to develop the software.,"Programming, Development"
Configuration Management,Managing and maintaining configuration settings of the software.,"Configuration Control, Configuration Tracking"
Contract,Defining contractual obligations and agreements.,"Agreement, Terms"
Debugging,Identifying and fixing defects in the software.,"Troubleshooting, Bug Fixing"
Demonstration,Demonstrating the software to stakeholders.,"Presentation, Showcase"
Documentation,Creating documentation to describe the software and its use.,"Manuals, Guides"
Estimation,Estimating the time and resources needed for tasks.,"Forecasting, Budgeting"
Incident Management,Responding to issues and requests from users.,"Customer Support, Issue Resolution, Incident Response, Issue Management, Helpdesk"
Integration Testing,Testing combined parts of the software to ensure they work together.,"System Testing, End-to-End Testing, Continuous Integration"
Marketing,Managing communication strategies to promote the software and engage with the target audience.,"Communications, Product Marketing, Brand Management"
Measurement,Measuring various aspects of the software or development process.,"Metrics, Analysis"
Monitoring,"Continuously observing and tracking the softwareâ€™s performance, security, and availability.","Surveillance, Observing, Performance Monitoring, Security Monitoring"
Outsourcing,Hiring external resources or companies to handle parts of the project.,"Contracting, External Hiring"
Insourcing,Removing reliance on external dependencies and building it yourself.,In-house development
Pair Programming,Two developers working together on the same code.,"Collaborative Coding, Joint Programming"
Performance Testing,Testing to ensure the software performs well under expected workloads.,"Load Testing, Stress Testing"
Prioritising,Defining the Minimum Viable Product and planning development priorities.,"Roadmapping, release planning, minimum viable product, backlog grooming."
Prototyping,Creating early models of the software to test concepts and ideas.,"Spike, Mockups, Pilot Model"
Redundancy,Ensuring backup systems are in place to prevent failure.,"Backup, Failover"
Refactoring,Revising code to improve its structure without changing its behavior.,"Code Cleanup, Code Optimization, Technical Debt Management, Debt Reduction, Code Debt Management"
Regression Testing,Testing to ensure new changes do not adversely affect existing functionality.,"Retesting, Non-Regression Testing"
Release / Delivery,Deploying the software to production.,"Deployment, Launch"
Requirements Capture,Gathering and documenting the requirements for the software.,"Requirement Gathering, Needs Analysis"
Retrospectives,"Conducting regular reviews to discuss what went well, what didn't, and how to improve.","Post-Mortem, After-Action Review"
Review,Evaluating work products to ensure quality.,"Assessment, Evaluation"
Sales,Managing the sales strategy to drive software adoption and revenue generation.,"Business Development, Sales Strategy, Revenue Generation"
Security Testing,Ensuring the application is secure by identifying vulnerabilities.,"Penetration Testing, Vulnerability Testing"
Stakeholder Management,Managing relationships and communications with stakeholders.,"Stakeholder Engagement, Stakeholder Coordination"
Issue Logging,Logging support issues and tracking their resolution.,"Issue Tracking, Ticket Logging"
Terms Of Reference,Defining the scope and objectives of the project.,"Project Charter, Scope Definition"
Training,Providing training to users or developers.,"Education, Instruction"
Unit Testing,Writing and running tests for individual units or components of the software.,"Component Testing, Module Testing"
User Acceptance Testing,Having a customer representative available onsite for feedback.,"Customer Collaboration, Client Presence, Final Testing, End User Testing, Onsite Customer"
Version Control,Using version control systems to manage changes to the codebase.,"Source Control, Revision Control"